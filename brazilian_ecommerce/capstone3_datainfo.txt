item = pd.read_csv('olist_order_items_dataset.csv')
customer = pd.read_csv('olist_customers_dataset.csv')
payment = pd.read_csv('olist_order_payments_dataset.csv')
review = pd.read_csv('olist_order_reviews_dataset.csv')	
order = pd.read_csv('olist_orders_dataset.csv')
product = pd.read_csv('olist_products_dataset.csv')



Columns for dataframe:

item = pd.read_csv('olist_order_items_dataset.csv')
order_id, order_item_id, product_id, seller_id, shipping_limit_date, price, freight_value


payment = pd.read_csv('olist_order_payments_dataset.csv')
order_id	payment_sequential	payment_type	payment_installments	payment_value

product = pd.read_csv('olist_products_dataset.csv')
product_id	product_category_name	product_name_lenght	product_description_lenght	product_photos_qty	product_weight_g	product_length_cm	product_height_cm	product_width_cm

order = pd.read_csv('olist_orders_dataset.csv')
order_id	customer_id	order_status	order_purchase_timestamp	order_approved_at	order_delivered_carrier_date	order_delivered_customer_date	order_estimated_delivery_date

customer = pd.read_csv('olist_customers_dataset.csv')
customer_id	customer_unique_id	customer_zip_code_prefix	customer_city	customer_state


review = pd.read_csv('olist_order_reviews_dataset.csv')	
order_id	review_score	review_creation_date	review_answer_timestamp


item, payment

product
order
customer
review

pd.merge(left, how='inner', on=None, left_on=None, right_on=None,
         left_index=False, right_index=False, sort=True,
         suffixes=('_x', '_y'), copy=True, indicator=False,
         validate=None)


pd.merge(left, right, how='inner', on=None, left_on=None, right_on=None,
         left_index=False, right_index=False, sort=True,
         suffixes=('_x', '_y'), copy=True, indicator=False,
         validate=None)






CREATE TABLE all_data
id serial NOT NULL,

3
4
5
6
7
8
9
CREATE TABLE persons
(
  id serial NOT NULL,
  first_name character varying(50),
  last_name character varying(50),
  dob date,
  email character varying(255),
  CONSTRAINT persons_pkey PRIMARY KEY (id)
)



2
3
4
5
6
7
8
9
CREATE TABLE persons
(
  id serial NOT NULL,
  first_name character varying(50),
  last_name character varying(50),
  dob date,
  email character varying(255),
  CONSTRAINT persons_pkey PRIMARY KEY (id)
)

customer_unique_id
order_id


item = pd.read_csv('olist_order_items_dataset.csv')
order_id	
order_item_id	
product_id	
seller_id	
shipping_limit_date	
price	
freight_value

payment = pd.read_csv('olist_order_payments_dataset.csv')
order_id	
payment_sequential	
payment_type	
payment_installments	
payment_value

order = pd.read_csv('olist_orders_dataset.csv')
order_id	
customer_id	
order_status	
order_purchase_timestamp	
order_approved_at	
order_delivered_carrier_date	
order_delivered_customer_date	
order_estimated_delivery_date

customer = pd.read_csv('olist_customers_dataset.csv')
customer_id	
customer_unique_id	
customer_zip_code_prefix	
customer_city	
customer_state




review = pd.read_csv('olist_order_reviews_dataset.csv')	
review_id	order_id	review_score	review_comment_title	review_comment_message	review_creation_date	review_answer_timestamp





product = pd.read_csv('olist_products_dataset.csv')
product_id	product_category_name	product_name_lenght	product_description_lenght	product_photos_qty	product_weight_g	product_length_cm	product_height_cm	product_width_cm



For reading:

item = pd.read_csv('olist_order_items_dataset.csv')
customer = pd.read_csv('olist_customers_dataset.csv')
payment = pd.read_csv('olist_order_payments_dataset.csv')
review = pd.read_csv('olist_order_reviews_dataset.csv')	
order = pd.read_csv('olist_orders_dataset.csv')
product = pd.read_csv('olist_products_dataset.csv')


Columns for dataframe:

item = pd.read_csv('olist_order_items_dataset.csv')
order_id	order_item_id	product_id	seller_id	shipping_limit_date	price	freight_value


payment = pd.read_csv('olist_order_payments_dataset.csv')
order_id	payment_sequential	payment_type	payment_installments	payment_value


customer = pd.read_csv('olist_customers_dataset.csv')
customer_id	customer_unique_id	customer_zip_code_prefix	customer_city	customer_state

review = pd.read_csv('olist_order_reviews_dataset.csv')	
order_id	review_score	review_creation_date	review_answer_timestamp


order = pd.read_csv('olist_orders_dataset.csv')
order_id	customer_id	order_status	order_purchase_timestamp	order_approved_at	order_delivered_carrier_date	order_delivered_customer_date	order_estimated_delivery_date


product = pd.read_csv('olist_products_dataset.csv')
product_id	product_category_name	product_name_lenght	product_description_lenght	product_photos_qty	product_weight_g	product_length_cm	product_height_cm	product_width_cm




Path to file:
/Users/cristinasandoval/Desktop/DATA_practice/INTRO-TO-DATA-ANALYSIS/Capstone_3


Final dataframe



df_sales['date'] = pd.to_datetime(df_sales['date'])




Columns for dataframe:

item = pd.read_csv('olist_order_items_dataset.csv')
order_id	
order_item_id	
product_id	
seller_id	
shipping_limit_date	
price	
freight_value


payment = pd.read_csv('olist_order_payments_dataset.csv')
order_id	
payment_sequential	
payment_type	
payment_installments	
payment_value


customer = pd.read_csv('olist_customers_dataset.csv')
customer_id	customer_unique_id	customer_zip_code_prefix	customer_city	customer_state

review = pd.read_csv('olist_order_reviews_dataset.csv')	
order_id	review_score	review_creation_date	review_answer_timestamp


order = pd.read_csv('olist_orders_dataset.csv')
order_id	customer_id	order_status	order_purchase_timestamp	order_approved_at	order_delivered_carrier_date	order_delivered_customer_date	order_estimated_delivery_date


product = pd.read_csv('olist_products_dataset.csv')
product_id	product_category_name	product_name_lenght	product_description_lenght	product_photos_qty	product_weight_g	product_length_cm	product_height_cm	product_width_cm











<class 'pandas.core.frame.DataFrame'>
Int64Index: 100739 entries, 0 to 103885
Data columns (total 18 columns):
order_id                         100739 non-null object
customer_id                      100739 non-null object
order_status                     100739 non-null object
order_purchase_timestamp         100739 non-null datetime64[ns]
order_approved_at                100739 non-null object
order_delivered_carrier_date     100739 non-null object
order_delivered_customer_date    100739 non-null datetime64[ns]
order_estimated_delivery_date    100739 non-null object
customer_unique_id               100739 non-null object
customer_zip_code_prefix         100739 non-null int64
customer_city                    100739 non-null object
customer_state                   100739 non-null object
payment_sequential               100739 non-null int64
payment_type                     100739 non-null object
payment_installments             100739 non-null int64
payment_value                    100739 non-null float64
year_order                       100739 non-null int64
month_order                      100739 non-null int64
dtypes: datetime64[ns](2), float64(1), int64(5), object(10)




df1 = df['Position'].str.contains("PG") 






